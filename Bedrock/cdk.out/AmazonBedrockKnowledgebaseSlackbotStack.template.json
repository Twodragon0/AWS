{
 "Resources": {
  "SlackBotTokenSecret134E8F53": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Slack Bot User OAuth Token",
    "Name": "/slack/bot-token",
    "SecretString": "{\"token\":\"xoxb-3185905655123-8701509597540-yfx5WYyrBHNLIkg7Z52WZ06M\"}"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/SlackBotTokenSecret/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not possible in this case",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "SlackBotSigningSecretD992DBC9": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": "Slack Signing Secret",
    "Name": "/slack/signing-secret",
    "SecretString": "{\"secret\":\"a1a344a28870c308b2a218bdc810da3d\"}"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/SlackBotSigningSecret/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not possible in this case",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "SlackBotTokenParameter00E0F488": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Reference to Slack Bot Token in Secrets Manager",
    "Name": "/slack/bot-token/parameter",
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Fn::Join": [
         "-",
         [
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              "-",
              {
               "Fn::Select": [
                6,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "SlackBotTokenSecret134E8F53"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              "-",
              {
               "Fn::Select": [
                6,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "SlackBotTokenSecret134E8F53"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       },
       "}}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/SlackBotTokenParameter/Resource"
   }
  },
  "SlackSigningSecretParameterC0B416B4": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Description": "Reference to Slack Signing Secret in Secrets Manager",
    "Name": "/slack/signing-secret/parameter",
    "Tier": "Standard",
    "Type": "String",
    "Value": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Fn::Join": [
         "-",
         [
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              "-",
              {
               "Fn::Select": [
                6,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "SlackBotSigningSecretD992DBC9"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          {
           "Fn::Select": [
            1,
            {
             "Fn::Split": [
              "-",
              {
               "Fn::Select": [
                6,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "SlackBotSigningSecretD992DBC9"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         ]
        ]
       },
       "}}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/SlackSigningSecretParameter/Resource"
   }
  },
  "kbbucket0DF3DEC2": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/kb-bucket/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "S3 access logging not required for sample code",
       "id": "AwsSolutions-S1"
      }
     ]
    }
   }
  },
  "kbbucketPolicy4A0AA7C7": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "kbbucket0DF3DEC2"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "kbbucket0DF3DEC2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "kbbucket0DF3DEC2",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "kbbucket0DF3DEC2",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "kbbucket0DF3DEC2",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/kb-bucket/Policy/Resource"
   }
  },
  "kbbucketAutoDeleteObjectsCustomResourceB76B18A1": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "kbbucket0DF3DEC2"
    }
   },
   "DependsOn": [
    "kbbucketPolicy4A0AA7C7"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/kb-bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "kbbucket0DF3DEC2"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "BedrockExecutionRole9C52C73A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "bedrock.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockExecutionRole/Resource"
   }
  },
  "BedrockExecutionRoleDefaultPolicy1A669643": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "bedrock:InvokeModel",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/amazon.titan-embed-text-v2:0"
         ]
        ]
       }
      },
      {
       "Action": [
        "aoss:APIAccessAll",
        "aoss:DeleteAccessPolicy",
        "aoss:DeleteCollection",
        "aoss:DeleteLifecyclePolicy",
        "aoss:DeleteSecurityConfig",
        "aoss:DeleteSecurityPolicy"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:aoss:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":collection/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:ListBucket",
       "Condition": {
        "StringEquals": {
         "aws:ResourceAccount": "394931144369"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "kbbucket0DF3DEC2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Delete*",
        "s3:GetObject"
       ],
       "Condition": {
        "StringEquals": {
         "aws:ResourceAccount": "394931144369"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "kbbucket0DF3DEC2",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "bedrock:Delete*",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":knowledge-base/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BedrockExecutionRoleDefaultPolicy1A669643",
    "Roles": [
     {
      "Ref": "BedrockExecutionRole9C52C73A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockExecutionRole/DefaultPolicy/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "IAM policy ARN limits actions to the AWS Account and AWS Service with conditions",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "IAM managed policies used for sample/demo code",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "MyGuardrail": {
   "Type": "AWS::Bedrock::Guardrail",
   "Properties": {
    "BlockedInputMessaging": "Sorry, the Ask AWS Well Architected slack bot cannot provide a response for this question",
    "BlockedOutputsMessaging": "Sorry, the Ask AWS Well Architected slack bot cannot provide a response for this question",
    "ContentPolicyConfig": {
     "FiltersConfig": [
      {
       "InputStrength": "HIGH",
       "OutputStrength": "HIGH",
       "Type": "SEXUAL"
      },
      {
       "InputStrength": "HIGH",
       "OutputStrength": "HIGH",
       "Type": "VIOLENCE"
      },
      {
       "InputStrength": "HIGH",
       "OutputStrength": "HIGH",
       "Type": "HATE"
      },
      {
       "InputStrength": "HIGH",
       "OutputStrength": "HIGH",
       "Type": "INSULTS"
      },
      {
       "InputStrength": "HIGH",
       "OutputStrength": "HIGH",
       "Type": "MISCONDUCT"
      },
      {
       "InputStrength": "HIGH",
       "OutputStrength": "NONE",
       "Type": "PROMPT_ATTACK"
      }
     ]
    },
    "Description": "Bedrock Guardrails for Slack bedrock bot",
    "Name": "slack-bedrock-guardrail",
    "SensitiveInformationPolicyConfig": {
     "PiiEntitiesConfig": [
      {
       "Action": "ANONYMIZE",
       "Type": "EMAIL"
      },
      {
       "Action": "ANONYMIZE",
       "Type": "PHONE"
      },
      {
       "Action": "ANONYMIZE",
       "Type": "NAME"
      },
      {
       "Action": "BLOCK",
       "Type": "CREDIT_DEBIT_CARD_NUMBER"
      }
     ]
    },
    "WordPolicyConfig": {
     "ManagedWordListsConfig": [
      {
       "Type": "PROFANITY"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/MyGuardrail"
   }
  },
  "MyGuardrailVersion": {
   "Type": "AWS::Bedrock::GuardrailVersion",
   "Properties": {
    "Description": "v1.0",
    "GuardrailIdentifier": {
     "Fn::GetAtt": [
      "MyGuardrail",
      "GuardrailId"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/MyGuardrailVersion"
   }
  },
  "osCollection": {
   "Type": "AWS::OpenSearchServerless::Collection",
   "Properties": {
    "Description": "Slack bedrock vector db",
    "Name": "slack-bedrock-vector-db",
    "Type": "VECTORSEARCH"
   },
   "DependsOn": [
    "aossAccessPolicy",
    "aossEncryptionPolicy",
    "aossNetworkPolicy"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/osCollection"
   }
  },
  "aossEncryptionPolicy": {
   "Type": "AWS::OpenSearchServerless::SecurityPolicy",
   "Properties": {
    "Name": "bedrock-kb-encryption-policy",
    "Policy": "{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/slack-bedrock-vector-db\"]}],\"AWSOwnedKey\":true}",
    "Type": "encryption"
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/aossEncryptionPolicy"
   }
  },
  "aossNetworkPolicy": {
   "Type": "AWS::OpenSearchServerless::SecurityPolicy",
   "Properties": {
    "Name": "bedrock-kb-network-policy",
    "Policy": "[{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/slack-bedrock-vector-db\"]},{\"ResourceType\":\"dashboard\",\"Resource\":[\"collection/slack-bedrock-vector-db\"]}],\"AllowFromPublic\":true}]",
    "Type": "network"
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/aossNetworkPolicy"
   }
  },
  "CreateIndexFunctionRole5B464E2F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/CreateIndexFunctionRole/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "IAM policy ARN limits actions to the AWS Account and AWS Service with conditions",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "IAM managed policies used for sample/demo code",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "CreateIndexFunctionRoleDefaultPolicy605916C4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "aoss:APIAccessAll",
        "aoss:CreateCollectionItems",
        "aoss:CreateIndex",
        "aoss:DeleteCollectionItems",
        "aoss:DeleteIndex",
        "aoss:DescribeCollectionItems",
        "aoss:DescribeIndex",
        "aoss:ReadDocument",
        "aoss:UpdateCollectionItems",
        "aoss:UpdateIndex",
        "aoss:WriteDocument"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:aoss:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":collection/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:aoss:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateIndexFunctionRoleDefaultPolicy605916C4",
    "Roles": [
     {
      "Ref": "CreateIndexFunctionRole5B464E2F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/CreateIndexFunctionRole/DefaultPolicy/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "IAM policy ARN limits actions to the AWS Account and AWS Service with conditions",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "IAM managed policies used for sample/demo code",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "CreateIndexFunctionFFD9A5AA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "aa1d9c8a3e60cba4f059009d186c3aaf00314dfb1daa7abb86c64f8a33652221.zip"
    },
    "Environment": {
     "Variables": {
      "INDEX_NAME": {
       "Fn::GetAtt": [
        "osCollection",
        "Id"
       ]
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CreateIndexFunctionRole5B464E2F",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 60
   },
   "DependsOn": [
    "CreateIndexFunctionRoleDefaultPolicy605916C4",
    "CreateIndexFunctionRole5B464E2F"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/CreateIndexFunction/Resource",
    "aws:asset:path": "asset.aa1d9c8a3e60cba4f059009d186c3aaf00314dfb1daa7abb86c64f8a33652221",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "aossAccessPolicy": {
   "Type": "AWS::OpenSearchServerless::AccessPolicy",
   "Properties": {
    "Name": "bedrock-kb-access-policy",
    "Policy": {
     "Fn::Join": [
      "",
      [
       "[{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/*\"],\"Permission\":[\"aoss:*\"]},{\"ResourceType\":\"index\",\"Resource\":[\"index/*/*\"],\"Permission\":[\"aoss:*\"]}],\"Principal\":[\"",
       {
        "Fn::GetAtt": [
         "BedrockExecutionRole9C52C73A",
         "Arn"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "CreateIndexFunctionRole5B464E2F",
         "Arn"
        ]
       },
       "\",\"arn:aws:iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":root\"]}]"
      ]
     ]
    },
    "Type": "data"
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/aossAccessPolicy"
   }
  },
  "vectorIndex1FDF8C6F": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Lambda\",\"action\":\"invoke\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "CreateIndexFunctionFFD9A5AA"
       },
       "\",\"InvocationType\":\"RequestResponse\",\"Payload\":\"{\\\"RequestType\\\":\\\"Create\\\",\\\"CollectionName\\\":\\\"slack-bedrock-vector-db\\\",\\\"IndexName\\\":\\\"slack-bedrock-os-index\\\",\\\"Endpoint\\\":\\\"",
       {
        "Fn::GetAtt": [
         "osCollection",
         "Id"
        ]
       },
       ".",
       {
        "Ref": "AWS::Region"
       },
       ".aoss.amazonaws.com\\\"}\"},\"physicalResourceId\":{\"id\":\"1747821651875\"}}"
      ]
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Lambda\",\"action\":\"invoke\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "CreateIndexFunctionFFD9A5AA"
       },
       "\",\"InvocationType\":\"RequestResponse\",\"Payload\":\"{\\\"RequestType\\\":\\\"Delete\\\",\\\"CollectionName\\\":\\\"slack-bedrock-vector-db\\\",\\\"IndexName\\\":\\\"slack-bedrock-os-index\\\",\\\"Endpoint\\\":\\\"",
       {
        "Fn::GetAtt": [
         "osCollection",
         "Id"
        ]
       },
       ".",
       {
        "Ref": "AWS::Region"
       },
       ".aoss.amazonaws.com\\\"}\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "aossAccessPolicy",
    "CreateIndexFunctionFFD9A5AA",
    "osCollection",
    "vectorIndexCustomResourcePolicy2340B416"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/vectorIndex/Resource/Default"
   }
  },
  "vectorIndexCustomResourcePolicy2340B416": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CreateIndexFunctionFFD9A5AA",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "vectorIndexCustomResourcePolicy2340B416",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "aossAccessPolicy",
    "CreateIndexFunctionFFD9A5AA",
    "osCollection"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/vectorIndex/CustomResourcePolicy/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "IAM policy ARN limits actions to the AWS Account and AWS Service with conditions",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "IAM managed policies used for sample/demo code",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ce2f3595a340d6c519a65888ef97e3b9b64f053f83608e32cc28162e22d7d99a.zip"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 60
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.ce2f3595a340d6c519a65888ef97e3b9b64f053f83608e32cc28162e22d7d99a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Custom resource is required for vector index creation",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "Suppressing validation error for intrinsic functions",
       "id": "CdkNagValidationFailure"
      }
     ]
    }
   }
  },
  "waitForIndexCreation1C9FE6A9": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"service\":\"Lambda\",\"action\":\"invoke\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "CreateIndexFunctionFFD9A5AA"
       },
       "\",\"InvocationType\":\"RequestResponse\",\"Payload\":\"{\\\"RequestType\\\":\\\"Check\\\",\\\"IndexName\\\":\\\"slack-bedrock-os-index\\\",\\\"Endpoint\\\":\\\"",
       {
        "Fn::GetAtt": [
         "osCollection",
         "Id"
        ]
       },
       ".",
       {
        "Ref": "AWS::Region"
       },
       ".aoss.amazonaws.com\\\"}\"},\"physicalResourceId\":{\"id\":\"waitForIndexCreation-1747821651885\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "vectorIndexCustomResourcePolicy2340B416",
    "vectorIndex1FDF8C6F",
    "waitForIndexCreationCustomResourcePolicy837E8CF0"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/waitForIndexCreation/Resource/Default"
   }
  },
  "waitForIndexCreationCustomResourcePolicy837E8CF0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CreateIndexFunctionFFD9A5AA",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "waitForIndexCreationCustomResourcePolicy837E8CF0",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "vectorIndexCustomResourcePolicy2340B416",
    "vectorIndex1FDF8C6F"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/waitForIndexCreation/CustomResourcePolicy/Resource"
   }
  },
  "bedrockkb": {
   "Type": "AWS::Bedrock::KnowledgeBase",
   "Properties": {
    "Description": "bedrock knowledge base for aws",
    "KnowledgeBaseConfiguration": {
     "Type": "VECTOR",
     "VectorKnowledgeBaseConfiguration": {
      "EmbeddingModelArn": {
       "Fn::Join": [
        "",
        [
         "arn:aws:bedrock:",
         {
          "Ref": "AWS::Region"
         },
         "::foundation-model/amazon.titan-embed-text-v2:0"
        ]
       ]
      }
     }
    },
    "Name": "slack-bedrock-kb",
    "RoleArn": {
     "Fn::GetAtt": [
      "BedrockExecutionRole9C52C73A",
      "Arn"
     ]
    },
    "StorageConfiguration": {
     "OpensearchServerlessConfiguration": {
      "CollectionArn": {
       "Fn::GetAtt": [
        "osCollection",
        "Arn"
       ]
      },
      "FieldMapping": {
       "MetadataField": "AMAZON_BEDROCK_METADATA",
       "TextField": "AMAZON_BEDROCK_TEXT_CHUNK",
       "VectorField": "bedrock-knowledge-base-default-vector"
      },
      "VectorIndexName": "slack-bedrock-os-index"
     },
     "Type": "OPENSEARCH_SERVERLESS"
    }
   },
   "DependsOn": [
    "aossAccessPolicy",
    "BedrockExecutionRoleDefaultPolicy1A669643",
    "BedrockExecutionRole9C52C73A",
    "CreateIndexFunctionFFD9A5AA",
    "osCollection",
    "vectorIndexCustomResourcePolicy2340B416",
    "vectorIndex1FDF8C6F",
    "waitForIndexCreationCustomResourcePolicy837E8CF0",
    "waitForIndexCreation1C9FE6A9"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/bedrockkb"
   }
  },
  "bedrockKbDataSource": {
   "Type": "AWS::Bedrock::DataSource",
   "Properties": {
    "DataSourceConfiguration": {
     "S3Configuration": {
      "BucketArn": {
       "Fn::GetAtt": [
        "kbbucket0DF3DEC2",
        "Arn"
       ]
      }
     },
     "Type": "S3"
    },
    "KnowledgeBaseId": {
     "Fn::GetAtt": [
      "bedrockkb",
      "KnowledgeBaseId"
     ]
    },
    "Name": "slack-bedrock-kb-ds"
   },
   "DependsOn": [
    "bedrockkb"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/bedrockKbDataSource"
   }
  },
  "EncryptionKey1B843E66": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "Description": "KMS key for Slack bot data encryption",
    "EnableKeyRotation": true,
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/EncryptionKey/Resource"
   }
  },
  "SlackEventTrackingTableE6657F6F": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "event_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "event_id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": false
    },
    "SSESpecification": {
     "KMSMasterKeyId": {
      "Fn::GetAtt": [
       "EncryptionKey1B843E66",
       "Arn"
      ]
     },
     "SSEEnabled": true,
     "SSEType": "KMS"
    },
    "TableName": "SlackEventTracking",
    "TimeToLiveSpecification": {
     "AttributeName": "expiry_time",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/SlackEventTrackingTable/Resource"
   }
  },
  "BedrockKbSlackbotFunctionServiceRoleFB2FDCC5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotFunction/ServiceRole/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "IAM policy ARN limits actions to the AWS Account and AWS Service with conditions",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "IAM managed policies used for sample/demo code",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "BedrockKbSlackbotFunctionServiceRoleDefaultPolicy1EDF00A1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "SlackBotSigningSecretD992DBC9"
        },
        {
         "Ref": "SlackBotTokenSecret134E8F53"
        }
       ]
      },
      {
       "Action": "bedrock:InvokeModel",
       "Condition": {
        "StringEquals": {
         "aws:ResourceAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/us.anthropic.claude-3-7-sonnet-20250219-v1:0"
         ]
        ]
       }
      },
      {
       "Action": [
        "bedrock:GetFoundationModel",
        "bedrock:GetInferenceProfile",
        "bedrock:GetModelInvocationLoggingConfiguration",
        "bedrock:InvokeModel",
        "bedrock:ListFoundationModels",
        "bedrock:ListInferenceProfiles",
        "bedrock:Retrieve",
        "bedrock:RetrieveAndGenerate"
       ],
       "Condition": {
        "StringEquals": {
         "aws:ResourceAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "bedrock:Retrieve",
        "bedrock:RetrieveAndGenerate"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":knowledge-base/",
          {
           "Fn::GetAtt": [
            "bedrockkb",
            "KnowledgeBaseId"
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:lambda:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":function:AmazonBedrock*"
         ]
        ]
       }
      },
      {
       "Action": "bedrock:ApplyGuardrail",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":guardrail/*"
         ]
        ]
       }
      },
      {
       "Action": "ssm:GetParameter",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":parameter",
           {
            "Ref": "SlackBotTokenParameter00E0F488"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":parameter",
           {
            "Ref": "SlackSigningSecretParameterC0B416B4"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EncryptionKey1B843E66",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SlackEventTrackingTableE6657F6F",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:CreateTable",
        "dynamodb:DescribeTable",
        "dynamodb:ListTables"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BedrockKbSlackbotFunctionServiceRoleDefaultPolicy1EDF00A1",
    "Roles": [
     {
      "Ref": "BedrockKbSlackbotFunctionServiceRoleFB2FDCC5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotFunction/ServiceRole/DefaultPolicy/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "IAM policy ARN limits actions to the AWS Account and AWS Service with conditions",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "IAM managed policies used for sample/demo code",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "BedrockKbSlackbotFunctionF152C577": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "40ec6b92a8624f2871f31cd1449eac0c1eda6f6fd9b3a240fdd44d4971b38f8e.zip"
    },
    "Environment": {
     "Variables": {
      "RAG_MODEL_ID": "us.anthropic.claude-3-7-sonnet-20250219-v1:0",
      "SLACK_SLASH_COMMAND": "/ask-aws",
      "KNOWLEDGEBASE_ID": {
       "Fn::GetAtt": [
        "bedrockkb",
        "KnowledgeBaseId"
       ]
      },
      "SLACK_BOT_TOKEN_PARAMETER": {
       "Ref": "SlackBotTokenParameter00E0F488"
      },
      "SLACK_SIGNING_SECRET_PARAMETER": {
       "Ref": "SlackSigningSecretParameterC0B416B4"
      },
      "GUARD_RAIL_ID": {
       "Fn::GetAtt": [
        "MyGuardrail",
        "GuardrailId"
       ]
      },
      "GUARD_RAIL_VERSION": {
       "Fn::GetAtt": [
        "MyGuardrailVersion",
        "Version"
       ]
      },
      "EVENT_TRACKING_TABLE": {
       "Ref": "SlackEventTrackingTableE6657F6F"
      },
      "PREVENT_DUPLICATES": "true",
      "EVENT_ID_SALT": "AmazonBedrockKnowledgebaseSlackbotStack",
      "EVENT_TTL_SECONDS": "900"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "BedrockKbSlackbotFunctionServiceRoleFB2FDCC5",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 600
   },
   "DependsOn": [
    "BedrockKbSlackbotFunctionServiceRoleDefaultPolicy1EDF00A1",
    "BedrockKbSlackbotFunctionServiceRoleFB2FDCC5"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotFunction/Resource",
    "aws:asset:path": "/Users/yong/Desktop/kubekube/levvels/utils/amazon-bedrock-knowledgebase-slackbot/lambda/BedrockKbSlackbotFunction",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ApiGatewayLogsRoleA66F4CEE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/ApiGatewayLogsRole/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "AWS managed policy is required for API Gateway CloudWatch logs",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "ApiGatewayAccount": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "ApiGatewayLogsRoleA66F4CEE",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/ApiGatewayAccount"
   }
  },
  "ApiGatewayAccessLogsFB871B4C": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/ApiGatewayAccessLogs/Resource"
   }
  },
  "BedrockKbSlackbotApi4FE69B5E": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "BedrockKbSlackbotApi"
   },
   "DependsOn": [
    "ApiGatewayAccount"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotApi/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "API validation is not required for demo/sample code",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "AWS WAF is not required for sample/demo code",
       "id": "AwsSolutions-APIG3"
      },
      {
       "reason": "Logging is enabled for the API",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "API Auth is not provided in demo/sample code",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "Cognito is not being used in the sample code",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "BedrockKbSlackbotApiDeploymentCE6734917d21b24e2bd8f19b4604e25fa214da46": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "BedrockKbSlackbotApi4FE69B5E"
    }
   },
   "DependsOn": [
    "ApiGatewayAccount",
    "BedrockKbSlackbotApislackaskawsPOST47203335",
    "BedrockKbSlackbotApislackaskaws73DA2F54",
    "BedrockKbSlackbotApislackBB6C792B"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotApi/Deployment/Resource"
   }
  },
  "BedrockKbSlackbotApiDeploymentStageprod37612A79": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "AccessLogSetting": {
     "DestinationArn": {
      "Fn::GetAtt": [
       "ApiGatewayAccessLogsFB871B4C",
       "Arn"
      ]
     },
     "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"caller\":\"$context.identity.caller\",\"user\":\"$context.identity.user\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
    },
    "DeploymentId": {
     "Ref": "BedrockKbSlackbotApiDeploymentCE6734917d21b24e2bd8f19b4604e25fa214da46"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "BedrockKbSlackbotApi4FE69B5E"
    },
    "StageName": "prod",
    "TracingEnabled": true
   },
   "DependsOn": [
    "ApiGatewayAccount"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotApi/DeploymentStage.prod/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "API validation is not required for demo/sample code",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "AWS WAF is not required for sample/demo code",
       "id": "AwsSolutions-APIG3"
      },
      {
       "reason": "Logging is enabled for the API",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "API Auth is not provided in demo/sample code",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "Cognito is not being used in the sample code",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "BedrockKbSlackbotApislackBB6C792B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "BedrockKbSlackbotApi4FE69B5E",
      "RootResourceId"
     ]
    },
    "PathPart": "slack",
    "RestApiId": {
     "Ref": "BedrockKbSlackbotApi4FE69B5E"
    }
   },
   "DependsOn": [
    "ApiGatewayAccount"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotApi/Default/slack/Resource"
   }
  },
  "BedrockKbSlackbotApislackaskaws73DA2F54": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "BedrockKbSlackbotApislackBB6C792B"
    },
    "PathPart": "ask-aws",
    "RestApiId": {
     "Ref": "BedrockKbSlackbotApi4FE69B5E"
    }
   },
   "DependsOn": [
    "ApiGatewayAccount"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotApi/Default/slack/ask-aws/Resource"
   }
  },
  "BedrockKbSlackbotApislackaskawsPOSTApiPermissionAmazonBedrockKnowledgebaseSlackbotStackBedrockKbSlackbotApi8F146898POSTslackaskaws5B9BF41E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "BedrockKbSlackbotFunctionF152C577",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BedrockKbSlackbotApi4FE69B5E"
       },
       "/",
       {
        "Ref": "BedrockKbSlackbotApiDeploymentStageprod37612A79"
       },
       "/POST/slack/ask-aws"
      ]
     ]
    }
   },
   "DependsOn": [
    "ApiGatewayAccount"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotApi/Default/slack/ask-aws/POST/ApiPermission.AmazonBedrockKnowledgebaseSlackbotStackBedrockKbSlackbotApi8F146898.POST..slack.ask-aws"
   }
  },
  "BedrockKbSlackbotApislackaskawsPOSTApiPermissionTestAmazonBedrockKnowledgebaseSlackbotStackBedrockKbSlackbotApi8F146898POSTslackaskawsCF5C6122": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "BedrockKbSlackbotFunctionF152C577",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BedrockKbSlackbotApi4FE69B5E"
       },
       "/test-invoke-stage/POST/slack/ask-aws"
      ]
     ]
    }
   },
   "DependsOn": [
    "ApiGatewayAccount"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotApi/Default/slack/ask-aws/POST/ApiPermission.Test.AmazonBedrockKnowledgebaseSlackbotStackBedrockKbSlackbotApi8F146898.POST..slack.ask-aws"
   }
  },
  "BedrockKbSlackbotApislackaskawsPOST47203335": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "BedrockKbSlackbotFunctionF152C577",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BedrockKbSlackbotApislackaskaws73DA2F54"
    },
    "RestApiId": {
     "Ref": "BedrockKbSlackbotApi4FE69B5E"
    }
   },
   "DependsOn": [
    "ApiGatewayAccount"
   ],
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/BedrockKbSlackbotApi/Default/slack/ask-aws/POST/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "API validation is not required for demo/sample code",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "AWS WAF is not required for sample/demo code",
       "id": "AwsSolutions-APIG3"
      },
      {
       "reason": "Logging is enabled for the API",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "API Auth is not provided in demo/sample code",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "Cognito is not being used in the sample code",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Ty44bIRD8ltwxiXeV3L1eZQ+bKJYd5Wq1oTPLDtAjHrZG1vx7Ghg/lOTUVU0/ikI8yOXnL/LTBzjFhdL9wpqDPO8SqF5wan+OqAKm6MBDh4GPKhfr376hScToSkcwvttAAIcJQzm/Ei55lOenrPrWOKMWNmSNGm/pmTfyBBEnYYAXbMliqarx1tTQJA6oA6lenjn3kiHoAMaKe/ILQzTkS+7V08mi7rDML4lnSLCjHBRvowF9RAjqLWI4YrAYYx27JmtRpXkG3z4Hk8ablJVSXHoRZMEdNMjz1+yvPVe8Y68sJvL3pxsMzsSisRi2hxjZd7kqQfSONbxi3cNhEnr04EjzW/2EQ3OmgknAYDpIeIKxqmZVlH0SW4xpNZhq4QyfcbA0OvT1Ve4YP39XRzbA9dWb6taFzIMa/o7pjXRJNcTXp44Vf6PuJVAeyskFT5NY55jI/XdSGQHDwP78VbUJdDQaQxVRTSniSt21V9WGfZg5e3eK/676kdOQ643X5LVJ1W9PGuV7/Hh8eJTLJX+H92jMIrBxxqHctvgHavz/VisDAAA="
   },
   "Metadata": {
    "aws:cdk:path": "AmazonBedrockKnowledgebaseSlackbotStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Outputs": {
  "BedrockKbSlackbotApiEndpointE5108098": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "BedrockKbSlackbotApi4FE69B5E"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "BedrockKbSlackbotApiDeploymentStageprod37612A79"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}